<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">
<!--
var newWind;
function putJumpCode(){
	var cnt = 57;
	newWind.document.write('<html>\n');
	newWind.document.write('<title>HtmlDiff Navigation</title>\n');
	newWind.document.write('<body>\n');
	newWind.document.write('<form name="jump">\n');
	newWind.document.write('<input type="button" value=" |&lt; " name="First" onclick=goto_first(this.form)>&nbsp;')
	newWind.document.write('<input type="button" value=" &lt; " name="Prev" onclick=goto_prev(this.form)>&nbsp;&nbsp;\n');
	newWind.document.write('<select name=url onchange=menu_goto(this.form)> \n');
	for (var i=0; i<cnt ;i++ ) {
		newWind.document.write('<option value="#c'+i+'">Change #'+(i+1)+ '</option> \n');
		}
	newWind.document.write('');
	newWind.document.write('</select>&nbsp;&nbsp;\n');
	newWind.document.write('<input type="button" value=" &gt; " name="Next"\n');
	newWind.document.write('onclick=goto_next(this.form)>\n');
	newWind.document.write('<input type="button" value=" &gt| " name="Last"\n');
	newWind.document.write('onclick=goto_last(this.form)>\n');
	newWind.document.write('</form>\n');
	newWind.document.write('');
	newWind.document.write('<form method="POST">\n');
	newWind.document.write('<p align="center"><i><font size="3">Generated\n');
	newWind.document.write('by <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> \n');
	newWind.document.write('</form>\n');
	newWind.document.write('</body>\n');
	newWind.document.write('</html>\n');
	newWind.document.write('<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">\n');
	newWind.document.write('<!--\n');
	newWind.document.write('');
	newWind.document.write('var directCloseFlag=1;\n');
	newWind.document.write('');
	newWind.document.write('function menu_goto( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('  var baseurl = opener.location.href ;\n');
	newWind.document.write('  var idx = baseurl.indexOf("#");\n');
	newWind.document.write('  if (idx > -1) {\n');
	newWind.document.write('	baseurl = baseurl.slice(0, idx);\n');
	newWind.document.write('  }');
	newWind.document.write('  selecteditem = menuform.url.selectedIndex ;\n');
	newWind.document.write('  newurl = menuform.url.options[ selecteditem ].value ;\n');
	newWind.document.write('  if (newurl.length != 0) {\n');
	newWind.document.write('    	opener.top.location.href = baseurl + newurl ;\n');
	newWind.document.write('  }');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_prev( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.selectedIndex>0) menuform.url.selectedIndex--;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_first( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = 0;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_last( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = menuform.url.options.length-1;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_next( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.options.length > (menuform.url.selectedIndex+1))\n');
	newWind.document.write('	menuform.url.selectedIndex++;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function restore()\n');
	newWind.document.write('{\n');
	newWind.document.write('    	focus();\n');
	newWind.document.write('	menu_goto(jump);\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('goto_first(jump)\n');
	newWind.document.write('//-->\n');
	newWind.document.write('<');
	newWind.document.write('/SCRIPT>\n');
}
function pop_navigate(){
var isOpen = false
try {
isOpen = (newWind != null) && (!newWind.closed)
} catch (e) {}
  if (!isOpen) {
    newWind =  window.open("" ,"HtmlDiffJumpWindow","width=270,height=40")
    if (newWind.opener == null) { // for Nav 2.0x
      newWind.opener = self // this creates and sets a new prop
    }	putJumpCode();
  
} 
else 
{	newWind.execScript("restore()", "JavaScript");
  }
}
function exit(){
var isOpen = false
try {
isOpen = (newWind != null) && (!newWind.closed)
} catch (e) {}
if (isOpen) {
	newWind.close();
  }
}
//--></SCRIPT><body onunload=exit()><form method="POST">  <p align="center"><i><font size="3">Difference Analysis Generated by   <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> on  13/12/2010 11:22 AM</font></i>&nbsp;&nbsp;
  <input type="button" value="Navigate Changes" name="Navigate" onclick=pop_navigate()></p></form></body><style type="text/css">
<!--
.HDNormal {  color: #000000;background-color: #ffffff;text-decoration:none}
.HDDeleted {  color: #ff0000;background-color: #ffffff;text-decoration:line-through}
.HDImgDeleted {  color: #ff0000;background-color: #ff0000}
.HDAdded {  color: #000000;background-color: #ffff00;text-decoration:none}
-->
</style>
<?cocoon-format type="text/html">
<html>
<head>
<span class="HDAdded"></span><meta content="text/html; charset=UTF-8" http-equiv="Content-Type"><span class="HDAdded">
</span><title>
Glossary of RuleML 1.0
</title>
<style type="text/css">
h1 { font-size: 32pt; font-weight: bold } h2 { font-size: 16pt; font-weight: bold } ul { line-height: 120% } ol { line-height: 120% } p { line-height: 100% } dt { font-weight: bold } abbr, acronym { cursor:help } 
</style>
</head>
<body bgcolor="#ffffff">
<center>
<br>
<br>
<h1>
Glossary of RuleML 1.0
</h1>
<h2>
David Hirtle, Tshering Dema, Doan Dai Duong, Le Thi Thu Thuy, Omair Shafiq
</h2>
<table border="0" align="center">
<tr>
<td colspan="2" align="center">
<h2>
Version history:
</h2>
</td>
</tr>
<tr>
<td align="right">
2005-11-09 - 
</td>
<td>
<a href="http://www.ruleml.org/0.9/glossary">Version 0.9</a></td>
</tr>
<tr>
<td align="right">
2006-08-24 - 
<span class="HDAdded"></span></td><span class="HDAdded">
</span><td><a name="diff" id="c0"><span class="HDAdded">
</span><a href="http://www.ruleml.org/0.91/glossary"><span class="HDAdded">Version 0.91</span></a><span class="HDAdded"></span></a></td><span class="HDAdded">
</span></tr><span class="HDAdded">
</span><tr><span class="HDAdded">
</span><td align="right"><a name="diff" id="c1"><span class="HDAdded">
</span><h3><span class="HDAdded">
2010-08-26 - 
</span></a></h3>
</td>
<td>
<h3>
<a name="diff" id="c2"><span class="HDDeleted"></span><a href="http://www.ruleml.org/0.91/glossary"><span class="HDDeleted">Version 0.91</span></a><span class="HDDeleted"></span></h3><span class="HDDeleted">
</span></a><span class="HDAdded"></span><a href="http://www.ruleml.org/1.0/glossary"><span class="HDAdded">Version 1.0</span></a><span class="HDAdded"></span></h3><span class="HDAdded">
</span></td>
</tr>
</table>
<h2>
Latest version: <a href="http://www.ruleml.org/glossary/">www.ruleml.org/glossary</a> 
</h2>
<p>
<h2>
Quick link: <a href="http://www.ruleml.org/spec/">Specification</a> 
</h2>
</center>
<h2>
Contents
</h2>
<ul>
<li>
<a href="#introduction">Introduction</a></li>
<li>
<a href="#glossary">Glossary</a></li>
</ul>
<h2>
<a name="introduction">Introduction</a></h2>
<p>
This glossary describes every tag of RuleML as of version 1.0.
</p>
<h2>
<a name="glossary">Glossary</a></h2>
<dl>
<dt id="gloss-And">
<code>
&lt;And&gt;
</code>
</dt>
<dd>
A conjunctive expression, where 
<code>
&lt;And&gt;Atom&lt;/And&gt;
</code>
is equivalent to 
<code>
Atom
</code>
. 
<p>
Attributes: <a href="#gloss-@closure"><code>
@closure
</code>
</a> 
</p>
<p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-arg">
<code>
&lt;arg&gt;
</code>
</dt>
<dd>
A role used for the positional arguments of a logical atom (<a href="#gloss-atom"><code>
&lt;Atom&gt;
</code>
</a>), i.e. any of the following: <a href="#gloss-ind"><code>
&lt;Ind&gt;
</code>
</a>, <a href="#gloss-data"><code>
&lt;Data&gt;
</code>
</a>, <a href="#gloss-var"><code>
&lt;Var&gt;
</code>
</a>, <a href="#gloss-skolem"><code>
&lt;Skolem&gt;
</code>
</a> or <a href="#gloss-reify"><code>
&lt;Reify&gt;
</code>
</a> (also <a href="#gloss-expr"><code>
&lt;Expr&gt;
</code>
</a> and <a href="#gloss-plex"><code>
&lt;Plex&gt;
</code>
</a> in non-Datalog sublanguages). 
<p>
Attributes: <a href="#gloss-@index"><code>
@index
</code>
</a> (required)
</p>
<p>
(See: <a href="../xsd/modules/term_module.xsd">term module</a>)
</p>
</dd>
<dt id="gloss-Assert">
<code>
&lt;Assert&gt;
</code>
</dt>
<dd>
A 
<abbr title="Knowledge Query Manipulation Language">
KQML
</abbr>
-like performative acting as a wrapper specifying that its content (optionally surrounded by a <a href="#gloss-formula"><code>
&lt;formula&gt;
</code>
</a> role) is asserted, making an 'implicit <a href="#gloss-rulebase"><code>
&lt;Rulebase&gt;
</code>
</a>' assumption. This allows the separation of declarative content from such procedural performatives. 
<p>
Attributes: <a href="#gloss-@mapdirection"><code>
@mapDirection
</code>
</a>, <a href="#gloss-@mapclosure"><code>
@mapClosure
</code>
</a>, <a href="#gloss-@mapmaterial"><code>
@mapMaterial
</code>
<a name="diff" id="c3"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDAdded"></span></a><span class="HDAdded"> 
</span><span class="HDAdded"></span></p><span class="HDAdded">
</span><p>
(See: <a href="../xsd/modules/performative_module.xsd">performative module</a> and <a href="http://www.ruleml.org/fol">FOL RuleML</a>)
</p>
</dd>
<dt id="gloss-Atom">
<code>
&lt;Atom&gt;
</code>
</dt>
<dd>
A logical atom, i.e. an expression formed from a predicate (or relation) applied to a collection of its (logical) arguments. The relation (<a href="#gloss-rel"><code>
&lt;Rel&gt;
</code>
</a>) is followed by a sequence of zero or more arguments (<a href="#gloss-arg"><code>
&lt;arg&gt;
</code>
</a>). Optional user-defined slots (<a href="#gloss-slot"><code>
&lt;slot&gt;
</code>
</a>) are also permitted before and/or after the arguments. Rest variables (<a href="#gloss-repo"><code>
&lt;repo&gt;
</code>
</a> and <a href="#gloss-resl"><code>
&lt;resl&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">) are also permitted. For example, &quot;John is the father of Mary&quot;: 
</span><b>
<pre>
&lt;Atom&gt;
  &lt;Rel&gt;father&lt;/Rel&gt;
  &lt;Ind&gt;John&lt;/Ind&gt;
  &lt;slot&gt;&lt;Ind&gt;daughter&lt;/Ind&gt;&lt;Ind&gt;Mary&lt;/Ind&gt;&lt;/slot&gt;
&lt;/Atom&gt;
</pre>
</b>
<p>
Attributes: <a href="#gloss-@closure"><code>
@closure
</code>
</a> 
</p>
<p>
(See: <a href="../xsd/modules/atom_module.xsd">atom module</a> and <a href="../xsd/modules/holog_module.xsd">holog module</a>)
</p>
</dd>
<a name="diff" id="c4"><span class="HDDeleted"></span><dt id="gloss-if"><span class="HDDeleted">
</span><code><span class="HDDeleted">
&lt;if&gt;
</span></code><span class="HDDeleted">
</span></dt><span class="HDDeleted">
</span><dd><span class="HDDeleted">
The if of an implication rule (</span><a href="#gloss-implies"><span class="HDDeleted"></span><code><span class="HDDeleted">
&lt;Implies&gt;
</span></code><span class="HDDeleted">
</span></a><span class="HDDeleted">) containing the premise(s), also known as the "antecedent" or "if" part of the rule. Also used as the "antecedent" part of an entailment (</span><a href="#gloss-entails"><span class="HDDeleted"></span><code><span class="HDDeleted">
&lt;Entails&gt;
</span></code><span class="HDDeleted">
</span></a><span class="HDDeleted">). 
</span><p><span class="HDDeleted">
(See: </span><a href="../xsd/modules/connective_module.xsd"><span class="HDDeleted">connective module</span></a><span class="HDDeleted">)
</span></p><span class="HDDeleted">
</span></dd><span class="HDDeleted">
</span></a><dt id="gloss-@card">
<code>
@card
</code>
</dt>
<dd>
An attribute optionally specifying a <a href="#gloss-slot"><code>
&lt;slot&gt;
</code>
</a>'s cardinality. 
<p>
(See: <a href="../xsd/modules/slot_module.xsd">slot module</a>)
</p>
</dd>
<dt id="gloss-closure">
<code>
@closure
</code>
</dt>
<dd>
An attribute indicating how the contained free variables are quantified. Allowed values are <a name="diff" id="c5"><span class="HDDeleted">"universal" and "existential".</span></a><span class="HDAdded">&quot;universal&quot; and &quot;existential&quot;.</span> 
<p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<span class="HDAdded"></span><dt id="gloss-Const"><span class="HDAdded">
</span><code>
<a name="diff" id="c6"><span class="HDDeleted">&lt;Con&gt;
</span></a><span class="HDAdded">&lt;Const&gt;
</span></code>
</dt>
<dd>
A neutralized constant (for <a href="#gloss-rel"><code>
&lt;Rel&gt;
</code>
</a> and <a href="#gloss-ind"><code>
&lt;Ind&gt;
</code>
</a>) of a Hilog term (<a href="#gloss-uniterm"><code>
<span class="HDDeleted">&lt;Hterm&gt;
</span><span class="HDAdded">&lt;Uniterm&gt;
</span></code>
</a>). It is optionally surrounded by an operator (<a href="#gloss-op"><code>
&lt;op&gt;
</code>
</a>). 
<p>
Attributes: <a href="#gloss-@type"><code>
@type
</code>
</a>, <a href="#gloss-@iri"><code>
<span class="HDDeleted">@uri
</span><span class="HDAdded">@iri
</span></code>
</a> 
</p>
<p>
(See: <a href="../xsd/modules/holog_module.xsd">holog module</a> and the <a href="http://www.w3.org/submission/swsf-swsl/#ruleml-hilog"><acronym title="Semantic Web Services Language">
SWSL
</acronym>
submission</a> to the 
<abbr title="World Wide Web Consortium">
W3C
</abbr>
)
</p>
</dd>
<dt id="gloss-Data">
<code>
&lt;Data&gt;
</code>
</dt>
<dd>
A fixed argument like RDF literals. It may be optionally associated with an <a href="http://www.w3.org/tr/xmlschema-2/#built-in-datatypes">XML Schema built-in datatype</a> using the 
<code>
xsi:type
</code>
attribute. For example: 
<b>
<span class="HDAdded"></span><pre><span class="HDAdded">&lt;Data xsi:type=&quot;xs:dateTime&quot;&gt;2002-10-10T17:00:00Z&lt;/Data&gt;
</span></pre>
</b>
is valid (according to the <a href="http://www.w3.org/tr/xmlschema-2/#datetime">dateTime</a> datatype), but the following is not: 
<b>
<span class="HDAdded"></span><pre><span class="HDAdded">&lt;Data xsi:type=&quot;xs:dateTime&quot;&gt;tomorrow&lt;/Data&gt;
</span></pre>
</b>
Note, however, that 
<code>
&lt;Data&gt;tomorrow&lt;/Data&gt;
</code>
is valid because no built-in datatype is given and that XML is also permissible, e.g. 
<b>
<pre>
 &lt;Data&gt;   
   &lt;ex:object&gt;
     &lt;ex:id&gt;115897&lt;/ex:id&gt;
     &lt;ex:owner&gt;John Doe&lt;/ex:owner&gt;
   &lt;/ex:object&gt;
 &lt;/Data&gt;
</pre>
</b>
<p>
(See: <a href="../xsd/modules/term_module.xsd">term module</a>)
</p>
</dd>
<dt id="gloss-declare">
<code>
&lt;declare&gt;
</code>
</dt>
<dd>
A role used for variables (<a href="#gloss-var"><code>
&lt;Var&gt;
</code>
</a>) declared within a quantifier (<a href="#gloss-forall"><code>
&lt;Forall&gt;
</code>
</a> or <a href="#gloss-exists"><code>
&lt;Exists&gt;
</code>
</a>). 
<p>
(See: <a href="../xsd/modules/quantifier_module.xsd">quantifier module</a>)
</p>
</dd>
<dt id="gloss-degree">
<code>
&lt;degree&gt;
</code>
</dt>
<dd>
An optional uncertainty value (between 0.0 and 1.0) that may be assigned to facts and rules. 
<p>
(See: <a href="../xsd/modules/atom_module.xsd">atom module</a>) and <a href="http://image.ntua.gr/fuzzyruleml">Fuzzy RuleML</a> 
</p>
</dd>
<dt id="gloss-@direction">
<code>
@direction
</code>
</dt>
<dd>
An attribute indicating the intended direction of an implication rule's (<a href="#gloss-implies"><code>
&lt;Implies&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">) inferencing. It has a neutral default value of &quot;bidirectional&quot;. Other allowed values are &quot;forward&quot; and &quot;forward&quot;. 
</span><p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-Entails">
<code>
&lt;Entails&gt;
</code>
</dt>
<dd>
Used to <a href="#gloss-assert"><code>
&lt;Assert&gt;
</code>
</a>/<a href="#gloss-query"><code>
&lt;Query&gt;
</code>
</a> that/whether the sequence of formulas in the first <a href="#gloss-rulebase"><code>
&lt;Rulebase&gt;
</code>
</a> entails the sequence of formulas in the second, e.g. the first acting as a knowledge base and the second acting as its integrity constraints. For example: <a href="http://www.ruleml.org/0.91/exa/fol+/naffolog/ssn.ruleml"><code>
ssn.ruleml
</code>
</a> 
<p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-Equal">
<code>
&lt;Equal&gt;
</code>
</dt>
<dd>
An equational formula consisting of two expressions, each of which contains an argument and may be optionally surrounded by a <a name="diff" id="c7"><span class="HDDeleted">lhs </span></a><span class="HDAdded">left </span>(<a href="#gloss-left"><code>
<span class="HDDeleted">&lt;lhs&gt;
</span><span class="HDAdded">&lt;left&gt;
</span></code>
</a>) or a <a name="diff" id="c8"><span class="HDDeleted">rhs </span></a><span class="HDAdded">right </span>(<a href="#gloss-right"><code>
<span class="HDDeleted">&lt;rhs&gt;
</span><span class="HDAdded">&lt;right&gt;
</span></code>
<span class="HDAdded"></span></a><span class="HDAdded">) role. For example, &quot;factorial(0)=1&quot; may be equivalently represented in the following two ways: 
</span><b>
<pre>
&lt;Equal&gt;
  &lt;Expr <a name="diff" id="c9"><span class="HDDeleted">in="yes"&gt;</span></a><span class="HDAdded">in=&quot;yes&quot;&gt;</span>
    &lt;Fun&gt;fac&lt;/Fun&gt;
<a name="diff" id="c10"><span class="HDDeleted">    &lt;Data xsi:type="xs:int"&gt;0&lt;/Data&gt;
</span></a><span class="HDAdded">    &lt;Data xsi:type=&quot;xs:int&quot;&gt;0&lt;/Data&gt;
</span>  &lt;/Expr&gt;
<a name="diff" id="c11"><span class="HDDeleted">  &lt;Data xsi:type="xs:int"&gt;1&lt;/Data&gt;
</span></a><span class="HDAdded">  &lt;Data xsi:type=&quot;xs:int&quot;&gt;1&lt;/Data&gt;
</span>&lt;/Equal&gt;
</pre>
</b>
<b>
<pre>
&lt;Equal&gt;
<a name="diff" id="c12"><span class="HDDeleted">  &lt;lhs&gt;
</span></a><span class="HDAdded">  &lt;left&gt;
</span>    &lt;Expr <span class="HDDeleted">in="yes"&gt;</span><span class="HDAdded">in=&quot;yes&quot;&gt;</span>
      &lt;Fun&gt;fac&lt;/Fun&gt;
      &lt;Data xsi:type=<a name="diff" id="c13"><span class="HDDeleted">"xs:int"</span></a><span class="HDAdded">&quot;xs:int&quot;</span>&gt;0&lt;/Data&gt;
    &lt;/Expr&gt;
<a name="diff" id="c14"><span class="HDDeleted">  &lt;/lhs&gt;
</span></a><span class="HDDeleted">  &lt;rhs&gt;
</span><span class="HDDeleted">    &lt;Data xsi:type="xs:int"&gt;1&lt;/Data&gt;
</span><span class="HDAdded">  &lt;/left&gt;
</span><span class="HDAdded">  &lt;right&gt;
</span><span class="HDAdded">    &lt;Data xsi:type=&quot;xs:int&quot;&gt;1&lt;/Data&gt;
</span>  &lt;/r<span class="HDDeleted">hs</span><span class="HDAdded">ight</span>&gt;    
&lt;/Equal&gt;
</pre>
</b>
<p>
Attributes: <a href="#gloss-@oriented"><code>
@oriented
</code>
<a name="diff" id="c15"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDAdded"></span></a><span class="HDAdded"> 
</span><span class="HDAdded"></span></p><span class="HDAdded">
</span><p>
(See: <a href="../xsd/modules/equality_module.xsd">equality module</a>)
</p>
</dd>
<dt id="gloss-Equivalent">
<code>
&lt;Equivalent&gt;
</code>
</dt>
<dd>
An equivalence expression, which is <a name="diff" id="c16"><span class="HDDeleted">"syntactic sugar"</span></a><span class="HDAdded">&quot;syntactic sugar&quot;</span> for a pair of conjoined converse implication rules (<a href="#gloss-implies"><code>
&lt;Implies&gt;
</code>
</a>). It consists of a pair of (optionally skipped) <a href="#gloss-torso"><code>
&lt;torso&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded"> roles. For example, &quot;A person owning an object is equivalent to an object belonging to a person&quot;: 
</span><b>
<pre>
&lt;Equivalent&gt;
  &lt;torso&gt;
    &lt;Atom&gt;
      &lt;Rel&gt;own&lt;/Rel&gt;
      &lt;Var&gt;person&lt;/Var&gt;
      &lt;Var&gt;object&lt;/Var&gt;
    &lt;/Atom&gt;
  &lt;/torso&gt;
  &lt;torso&gt;
    &lt;Atom&gt;
      &lt;Rel&gt;belongs&lt;/Rel&gt;
      &lt;Var&gt;object&lt;/Var&gt;
      &lt;Var&gt;person&lt;/Var&gt;
    &lt;/Atom&gt;
  &lt;/torso&gt;
&lt;/Equivalent&gt;
</pre>
</b>
<p>
Attributes: <a href="#gloss-@closure"><code>
@closure
</code>
</a> 
</p>
<p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-Exists">
<code>
&lt;Exists&gt;
</code>
</dt>
<dd>
Explicit existential quantifier. It consists of one or more variables (<a href="#gloss-var"><code>
&lt;Var&gt;
</code>
</a>), each optionally surrounded by a <a href="#gloss-declare"><code>
&lt;declare&gt;
</code>
</a> role, followed by a logical formula (optionally surrounded by a <a href="#gloss-formula"><code>
&lt;formula&gt;
</code>
</a> role). 
<p>
(See: <a href="../xsd/modules/quantifier_module.xsd">quantifier module</a>)
</p>
</dd>
<dt id="gloss-Expr">
<code>
&lt;Expr&gt;
</code>
</dt>
<dd>
A logical function of the form <a name="diff" id="c17"><span class="HDDeleted">"f(...)"</span></a><span class="HDAdded">&quot;f(...)&quot;</span> where f is a function name. The function name (<a href="#gloss-fun"><code>
&lt;Fun&gt;
</code>
</a>) is followed by a sequence of zero or more arguments (<a href="#gloss-arg"><code>
&lt;arg&gt;
</code>
</a>). Optional user-defined slots (<a href="#gloss-slot"><code>
&lt;slot&gt;
</code>
</a>) are also permitted before and/or after the arguments, just like an atom (<a href="#gloss-atom"><code>
&lt;Atom&gt;
</code>
</a>).	Rest variables (<a href="#gloss-repo"><code>
&lt;repo&gt;
</code>
</a> and <a href="#gloss-resl"><code>
&lt;resl&gt;
</code>
</a>) are also permitted. If the attribute <a href="#gloss-@per"><code>
<span class="HDDeleted">@in
</span><span class="HDAdded">@per
</span></code>
<span class="HDAdded"></span></a><span class="HDAdded"> has value &quot;no&quot;, the 
</span><code>
&lt;Expr&gt;
</code>
corresponds to a complex term (<a href="/0.9/glossary/#gloss-cterm"><code>
&lt;Cterm&gt;
</code>
</a>) in 0.9 and earlier: 
<b>
<pre>
&lt;Expr in=<a name="diff" id="c18"><span class="HDDeleted">"no"</span></a><span class="HDAdded">&quot;no&quot;</span>&gt;
  &lt;Fun&gt;book&lt;/Fun&gt;
  &lt;Var&gt;title&lt;/Var&gt;
  &lt;Var&gt;author&lt;/Var&gt;
  &lt;Var&gt;table of contents&lt;/Var&gt;
  &lt;Var&gt;chapters&lt;/Var&gt;
&lt;/Expr&gt;
</pre>
</b>
On the other hand, if the attribute <a href="#gloss-@per"><code>
<span class="HDDeleted">@in
</span><span class="HDAdded">@per
</span></code>
<span class="HDAdded"></span></a><span class="HDAdded"> has value &quot;yes&quot;, the 
</span><code>
&lt;Expr&gt;
</code>
corresponds to a nano (<a href="/0.9/glossary/#gloss-nano"><code>
&lt;Nano&gt;
</code>
</a>) in 0.9 and earlier. 
<p>
Attributes: <a href="#gloss-@per"><code>
<span class="HDDeleted">@in
</span><span class="HDAdded">@per
</span></code>
</a>, <a href="#gloss-@type"><code>
@type
</code>
<a name="diff" id="c19"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDAdded"></span></a><span class="HDAdded"> 
</span><span class="HDAdded"></span></p><span class="HDAdded">
</span><p>
(See: <a href="../xsd/modules/expr_module.xsd">expr module</a> and <a href="http://www.ruleml.org/fun">Functional Ruleml</a>)
</p>
</dd>
<dt id="gloss-Forall">
<code>
&lt;Forall&gt;
</code>
</dt>
<dd>
Explicit universal quantifier. It consists of one or more variables (<a href="#gloss-var"><code>
&lt;Var&gt;
</code>
</a>), each optionally surrounded by a <a href="#gloss-declare"><code>
&lt;declare&gt;
</code>
</a> role, followed by a logical formula (optionally surrounded by a <a href="#gloss-formula"><code>
&lt;formula&gt;
</code>
</a> role). 
<p>
(See: <a href="../xsd/modules/quantifier_module.xsd">quantifier module</a>)
</p>
</dd>
<dt id="gloss-formula">
<code>
&lt;formula&gt;
</code>
</dt>
<dd>
The formula role of a conjunctive (<a href="#gloss-and"><code>
&lt;And&gt;
</code>
</a>) or disjunctive (<a href="#gloss-or"><code>
&lt;Or&gt;
</code>
</a>) expression, quantifier (<a href="#gloss-forall"><code>
&lt;Forall&gt;
</code>
</a> or <a href="#gloss-exists"><code>
&lt;Exists&gt;
</code>
</a>), or performative (<a href="#gloss-assert"><code>
&lt;Assert&gt;
</code>
</a>, <a href="#gloss-query"><code>
&lt;Query&gt;
</code>
</a> or <a href="#gloss-retract"><code>
&lt;Retract&gt;
</code>
</a>). 
<p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>, <a href="../xsd/modules/performative_module.xsd">performative module</a> and <a href="../xsd/modules/quantifier_module.xsd">quantifier module</a>)
</p>
</dd>
<dt id="gloss-Fun">
<code>
&lt;Fun&gt;
</code>
</dt>
<dd>
A user-defined function name of an <a href="#gloss-expr"><code>
&lt;Expr&gt;
</code>
</a>. It is optionally surrounded by an operator (<a href="#gloss-op"><code>
&lt;op&gt;
</code>
</a>). 
<p>
Attributes: <a href="#gloss-@iri"><code>
<span class="HDDeleted">@uri
</span><span class="HDAdded">@iri
</span></code>
</a>, <a href="#gloss-@per"><code>
<span class="HDDeleted">@in
</span><span class="HDAdded">@per
</span></code>
</a> (and <a href="#gloss-@val"><code>
@val
</code>
</a> in equality sublanguages) 
</p>
<p>
(See: <a href="../xsd/modules/expr_module.xsd">expr module</a>)
</p>
</dd>
<dt id="gloss-Get">
<code>
&lt;Get&gt;
</code>
</dt>
<dd>
A slot access primitive. 
<p>
(See: <a href="../xsd/modules/frame_module.xsd">frame module</a>, and the <a href="http://www.w3.org/submission/swsf-swsl/#ruleml-frames"><acronym title="Semantic Web Services Language">
SWSL
</acronym>
submission</a> to the 
<abbr title="World Wide Web Consortium">
W3C
</abbr>
)
</p>
</dd>
<span class="HDAdded"></span><dt id="gloss-if"><span class="HDAdded">
</span><code>
<a name="diff" id="c20"><span class="HDDeleted">&lt;Hterm&gt;
</span></a><span class="HDAdded">&lt;if&gt;
</span></code>
</dt>
<dd>
<a name="diff" id="c21"><span class="HDDeleted">A Hilog term, generalizing </span><a href="#gloss-atom"><span class="HDDeleted"></span><code><span class="HDDeleted">
</span></a><span class="HDDeleted">&lt;Atom&gt;
</span><span class="HDAdded">The if of an implication rule (</span><a href="#gloss-implies"><span class="HDAdded"></span><code><span class="HDAdded">
</span><span class="HDAdded">&lt;Implies&gt;
</span></code>
<a name="diff" id="c22"><span class="HDDeleted"></span></a><span class="HDDeleted"> and </span><a href="#gloss-expr"><span class="HDDeleted"></span><code><span class="HDDeleted">
</span></a><span class="HDDeleted">&lt;Expr&gt;
</span><span class="HDAdded"></span></a><span class="HDAdded">) containing the premise(s), also known as the &quot;antecedent&quot; or &quot;if&quot; part of the rule. Also used as the &quot;antecedent&quot; part of an entailment (</span><a href="#gloss-entails"><span class="HDAdded"></span><code><span class="HDAdded">
</span><span class="HDAdded">&lt;Entails&gt;
</span></code>
<span class="HDAdded"></span></a><span class="HDAdded">). 
</span><p>
<a name="diff" id="c23"><span class="HDDeleted">(See: </span><a href="../xsd/modules/holog_module.xsd"><span class="HDDeleted">holog module</span></a><span class="HDDeleted">, and the </span><a href="http://www.w3.org/submission/swsf-swsl/#ruleml-hilog"><span class="HDDeleted"></span><acronym title="Semantic Web Services Language"><span class="HDDeleted">
</span></a><span class="HDDeleted">SWSL
</span><span class="HDDeleted"></span></acronym><span class="HDDeleted">
</span><span class="HDDeleted">submission</span></a><span class="HDDeleted"> to the 
</span><span class="HDDeleted"></span><abbr title="World Wide Web Consortium"><span class="HDDeleted">
</span><span class="HDDeleted">W3C
</span><span class="HDDeleted"></span></abbr><span class="HDDeleted">
</span><span class="HDDeleted">)
</span><span class="HDAdded">(See: </span><a href="../xsd/modules/connective_module.xsd"><span class="HDAdded">connective module</span></a><span class="HDAdded">)
</span></p>
</dd>
<dt id="gloss-Implies">
<code>
&lt;Implies&gt;
</code>
</dt>
<dd>
An implication rule. It consists of a conclusion role (<a href="#gloss-then"><code>
&lt;then&gt;
</code>
</a>) followed by a premise role (<a href="#gloss-if"><code>
&lt;if&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">), or, equivalently (since roles constitute unordered elements), a premise role followed by a conclusion role. For example, &quot;The discount for a customer buying a product is 5.0 percent if the customer is premium and the product is regular&quot;: 
</span><b>
<pre>
&lt;Implies&gt;
<a name="diff" id="c24"><span class="HDDeleted">  &lt;then&gt;
    &lt;Atom&gt;
      &lt;Rel&gt;discount&lt;/Rel&gt;
      &lt;Var&gt;customer&lt;/Var&gt;
      &lt;Var&gt;product&lt;/Var&gt;
      &lt;Ind&gt;5.0 percent&lt;/Ind&gt;
    &lt;/Atom&gt;
  &lt;/then&gt;
</span></a>  &lt;if&gt;
    &lt;And&gt;
      &lt;Atom&gt;
        &lt;Rel&gt;premium&lt;/Rel&gt;
        &lt;Var&gt;customer&lt;/Var&gt;
      &lt;/Atom&gt;
      &lt;Atom&gt;
        &lt;Rel&gt;regular&lt;/Rel&gt;
        &lt;Var&gt;product&lt;/Var&gt;
      &lt;/Atom&gt;
    &lt;/And&gt;
  &lt;/if&gt;
<a name="diff" id="c25"><span class="HDAdded">  &lt;then&gt;
    &lt;Atom&gt;
      &lt;Rel&gt;discount&lt;/Rel&gt;
      &lt;Var&gt;customer&lt;/Var&gt;
      &lt;Var&gt;product&lt;/Var&gt;
      &lt;Ind&gt;5.0 percent&lt;/Ind&gt;
    &lt;/Atom&gt;
  &lt;/then&gt;
</span></a>&lt;/Implies&gt;
</pre>
</b>
Alternatively, the roles may be skipped, in which case the premise comes first followed by the conclusion as suggested by the element name 'Implies' (since the if of a rule implies the <a name="diff" id="c26"><span class="HDDeleted">then,</span></a><span class="HDAdded">'then',</span> not vice versa). Using the same example, the order changes: 
<b>
<pre>
&lt;Implies&gt;
  &lt;And&gt;
    &lt;Atom&gt;
      &lt;Rel&gt;premium&lt;/Rel&gt;
      &lt;Var&gt;customer&lt;/Var&gt;
    &lt;/Atom&gt;
    &lt;Atom&gt;
      &lt;Rel&gt;regular&lt;/Rel&gt;
      &lt;Var&gt;product&lt;/Var&gt;
    &lt;/Atom&gt;
  &lt;/And&gt;
  &lt;Atom&gt;
    &lt;Rel&gt;discount&lt;/Rel&gt;
    &lt;Var&gt;customer&lt;/Var&gt;
    &lt;Var&gt;product&lt;/Var&gt;
    &lt;Ind&gt;5.0 percent&lt;/Ind&gt;
  &lt;/Atom&gt;
&lt;/Implies&gt;
</pre>
</b>
<p>
Attributes: <a href="#gloss-@closure"><code>
@closure
</code>
</a>, <a href="#gloss-@direction"><code>
@direction
</code>
</a>, <a href="#gloss-@material"><code>
@material
</code>
<a name="diff" id="c27"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDDeleted"></span><p><span class="HDDeleted">
</span><span class="HDDeleted">(See: </span><a href="../xsd/modules/connective_module.xsd"><span class="HDDeleted">connective module</span></a><span class="HDDeleted">)
</span><span class="HDAdded"></span></a><span class="HDAdded"> 
</span></p>
<a name="diff" id="c28"><span class="HDDeleted"></span></dd><span class="HDDeleted">
</span><dt id="gloss-@in"><span class="HDDeleted">
</span><code><span class="HDDeleted">
@in
</span></code><span class="HDDeleted">
</span></dt><span class="HDDeleted">
</span><dd><span class="HDDeleted">
An attribute used to indicate whether a function (</span><a href="#gloss-fun"><span class="HDDeleted"></span><code><span class="HDDeleted">
&lt;Fun&gt;
</span></code><span class="HDDeleted">
</span></a><span class="HDDeleted">) or an expr (</span><a href="#gloss-expr"><span class="HDDeleted"></span><code><span class="HDDeleted">
&lt;Expr&gt;
</span></code><span class="HDDeleted">
</span></a><span class="HDDeleted">) will be interpreted. In equality sublanguages, it has three values "no" (the default), "yes" and "no", while in non-equality sublanguages it can only have the value "no". 
</span></a><p>
<a name="diff" id="c29"><span class="HDDeleted">(See: </span><a href="../xsd/modules/expr_module.xsd"><span class="HDDeleted">expr module</span></a><span class="HDDeleted"> and </span><a href="http://www.ruleml.org/fun"><span class="HDDeleted">Functional RuleML</span></a><span class="HDDeleted">)
</span></a><span class="HDAdded">(See: </span><a href="../xsd/modules/connective_module.xsd"><span class="HDAdded">connective module</span></a><span class="HDAdded">)
</span></p>
</dd>
<dt id="gloss-Ind">
<code>
&lt;Ind&gt;
</code>
</dt>
<dd>
An individual constant, as in predicate logic, which can also be considered to be a fixed argument like RDF resources. 
<p>
Attributes: <a href="#gloss-@type"><code>
@type
</code>
</a>, <a href="#gloss-@iri"><code>
<span class="HDDeleted">@uri
</span><span class="HDAdded">@iri
</span></code>
</a> 
</p>
<p>
(See: <a href="../xsd/modules/term_module.xsd">term module</a>)
</p>
</dd>
<dt id="gloss-@index">
<code>
@index
</code>
</dt>
<dd>
A required role for specifying the position of a positional argument (<a href="#gloss-arg"><code>
&lt;arg&gt;
</code>
</a>) within a logical atom (<a href="#gloss-atom"><code>
&lt;Atom&gt;
</code>
</a>). 
<p>
(See: <a href="../xsd/modules/term_module.xsd">term module</a>)
</p>
</dd>
<dt id="gloss-InstanceOf">
<code>
&lt;InstanceOf&gt;
</code>
</dt>
<dd>
A class membership molecule. 
<p>
(See: <a href="../xsd/modules/frame_module.xsd">frame module</a>, and the <a href="http://www.w3.org/submission/swsf-swsl/#ruleml-frames"><acronym title="Semantic Web Services Language">
SWSL
</acronym>
submission</a> to the 
<abbr title="World Wide Web Consortium">
W3C
</abbr>
)
</p>
</dd>
<a name="diff" id="c30"><span class="HDDeleted"></span><dt id="gloss-lhs"><span class="HDDeleted">
</span></a><span class="HDAdded"></span><dt id="gloss-@iri"><span class="HDAdded">
</span><span class="HDAdded"></span><code><span class="HDAdded">
@iri
</span></code><span class="HDAdded">
</span></dt><span class="HDAdded">
</span><dd><span class="HDAdded">
An optional attribute of </span><a href="#gloss-ind"><span class="HDAdded"></span><code><span class="HDAdded">
&lt;Ind&gt;
</span></code><span class="HDAdded">
</span></a><span class="HDAdded">, </span><a href="#gloss-rel"><span class="HDAdded"></span><code><span class="HDAdded">
&lt;Rel&gt;
</span></code><span class="HDAdded">
</span></a><span class="HDAdded">, and </span><a href="#gloss-fun"><span class="HDAdded"></span><code><span class="HDAdded">
&lt;Fun&gt;
</span></code><span class="HDAdded">
</span></a><span class="HDAdded"> for referring to a IRI like for XHTML anchors. On </span><a href="#gloss-ind"><span class="HDAdded"></span><code><span class="HDAdded">
&lt;Ind&gt;
</span></code><span class="HDAdded">
</span></a><span class="HDAdded">s (or </span><a href="#gloss-const"><span class="HDAdded"></span><code><span class="HDAdded">
&lt;Const&gt;
</span></code><span class="HDAdded">
</span></a><span class="HDAdded">s, in frame sublanguages) within an </span><a href="#gloss-oid"><span class="HDAdded"></span><code><span class="HDAdded">
&lt;oid&gt;
</span></code><span class="HDAdded">
</span></a><span class="HDAdded">, this attribute can also act as a web label. 
</span><p><span class="HDAdded">
(See: </span><a href="../xsd/modules/iri_module.xsd"><span class="HDAdded">iri module</span></a><span class="HDAdded">)
</span></p><span class="HDAdded">
</span></dd><span class="HDAdded">
</span><dt id="gloss-left"><span class="HDAdded">
</span><code>
<a name="diff" id="c31"><span class="HDDeleted">&lt;lhs&gt;
</span></a><span class="HDAdded">&lt;left&gt;
</span></code>
</dt>
<dd>
The left-hand side of an equation (<a href="#gloss-equal"><code>
&lt;Equal&gt;
</code>
</a>). 
<p>
(See: <a href="../xsd/modules/equality_module.xsd">equality module</a>)
</p>
</dd>
<dt id="gloss-@mapClosure">
<code>
@mapClosure
</code>
</dt>
<dd>
An attribute indicating how the free variables falling within its scope (i.e. child elements) are quantified. See <a href="../#mapping">attribute mapping</a> for more details. Allowed values are <a name="diff" id="c32"><span class="HDDeleted">"universal" and "existential".</span></a><span class="HDAdded">&quot;universal&quot; and &quot;existential&quot;.</span> 
<p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-@mapDirection">
<code>
@mapDirection
</code>
</dt>
<dd>
An attribute indicating the intended direction of implication rule (<a href="#gloss-implies"><code>
&lt;Implies&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">) inferencing of elements falling within its scope (i.e. child elements). See </span><a href="../#mapping"><span class="HDAdded">attribute mapping</span></a><span class="HDAdded"> for more details. This attribute has a neutral default value of &quot;bidirectional&quot;. Other allowed values are &quot;forward&quot; and &quot;backward&quot;. 
</span><p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-@mapMaterial">
<code>
@mapMaterial
</code>
</dt>
<dd>
An attribute indicating the kind of all implication rules (<a href="#gloss-implies"><code>
&lt;Implies&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">) falling within its scope (i.e. child elements). See </span><a href="../#mapping"><span class="HDAdded">attribute mapping</span></a><span class="HDAdded"> for more details. Allowed values are &quot;yes&quot; (the default) and &quot;no&quot;. 
</span><p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a> and <a href="http://www.ruleml.org/fun">Functional RuleML</a>)
</p>
</dd>
<dt id="gloss-@material">
<code>
@material
</code>
</dt>
<dd>
An attribute indicating the kind of an implication rule (<a href="#gloss-implies"><code>
&lt;Implies&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">). Allowed values are &quot;yes&quot; (the default) and &quot;no&quot;. 
</span><p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-@maxCard">
<code>
@maxCard
</code>
</dt>
<dd>
An attribute optionally specifying a <a href="#gloss-slot"><code>
&lt;slot&gt;
</code>
</a>'s maximum cardinality. 
<p>
(See: <a href="../xsd/modules/slot_module.xsd">slot module</a>)
</p>
</dd>
<dt id="gloss-@minCard">
<code>
@minCard
</code>
</dt>
<dd>
An attribute optionally specifying a <a href="#gloss-slot"><code>
&lt;slot&gt;
</code>
</a>'s minimum cardinality. 
<p>
(See: <a href="../xsd/modules/slot_module.xsd">slot module</a>)
</p>
</dd>
<dt id="gloss-Naf">
<code>
&lt;Naf&gt;
</code>
</dt>
<dd>
A <a name="diff" id="c33"><span class="HDDeleted">"by default"</span></a><span class="HDAdded">&quot;by default&quot;</span> negation of a logical atom (<a href="#gloss-atom"><code>
&lt;Atom&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">) (i.e. &quot;weak&quot; negation or negation as failure). The negated atom may be optionally surrounded by a </span><a href="#gloss-weak"><span class="HDAdded"></span><code><span class="HDAdded">
</span>&lt;weak&gt;
</code>
</a> role. 
<p>
(See: <a href="../xsd/modules/naf_module.xsd">naf module</a>)
</p>
</dd>
<dt id="gloss-Neg">
<code>
&lt;Neg&gt;
</code>
</dt>
<dd>
A classical negation of a logical atom (<a href="#gloss-atom"><code>
&lt;Atom&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">) (i.e. classical or &quot;strong&quot; negation). The negated atom may be optionally surrounded by a </span><a href="#gloss-strong"><span class="HDAdded"></span><code><span class="HDAdded">
</span>&lt;strong&gt;
</code>
</a> role. 
<p>
(See: <a href="../xsd/modules/neg_module.xsd">neg module</a>)
</p>
</dd>
<dt id="gloss-oid">
<code>
&lt;oid&gt;
</code>
</dt>
<dd>
An optional label for a clause, creating accessibility within the knowledge representation. This can help for representing prioritization between rules, for example. All type tags (i.e. those that begin with an uppercase letter) of RuleML can begin with such a label except those that permit only character data (e.g. <a href="#gloss-ind"><code>
&lt;Ind&gt;
</code>
</a>, <a href="#gloss-rel"><code>
&lt;Rel&gt;
</code>
</a>, etc.). Note that 
<code>
oid
</code>
s are not required to be unique within a rulebase. 
<p>
(See: <a href="../xsd/modules/desc_module.xsd">desc module</a>)
</p>
</dd>
<dt id="gloss-op">
<code>
&lt;op&gt;
</code>
</dt>
<dd>
An operator expression including either a relation (<a href="#gloss-rel"><code>
&lt;Rel&gt;
</code>
</a>) of an atom (<a href="#gloss-op"><code>
&lt;Atom&gt;
</code>
</a>), a function name (<a href="#gloss-fun"><code>
&lt;Fun&gt;
</code>
</a>) of a (<a href="#gloss-expr"><code>
&lt;Expr&gt;
</code>
</a>), or a neutralized constant (<a href="#gloss-const"><code>
<span class="HDDeleted">&lt;Con&gt;
</span><span class="HDAdded">&lt;Const&gt;
</span></code>
</a>) of a Hilog term (<a href="#gloss-uniterm"><code>
<span class="HDDeleted">&lt;Hterm&gt;
</span><span class="HDAdded">&lt;Uniterm&gt;
</span></code>
</a>). 
<p>
(See: <a href="../xsd/modules/atom_module.xsd">atom module</a>, <a href="../xsd/modules/expr_module.xsd">expr module</a> and <a href="../xsd/modules/holog_module.xsd">holog module</a>)
</p>
</dd>
<dt id="gloss-Or">
<code>
&lt;Or&gt;
</code>
</dt>
<dd>
A disjunctive expression, where 
<code>
&lt;Or&gt;Atom&lt;/Or&gt;
</code>
is equivalent to 
<code>
Atom
</code>
. 
<p>
Attributes: <a href="#gloss-@closure"><code>
@closure
</code>
<a name="diff" id="c34"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDAdded"></span></a><span class="HDAdded"> 
</span><span class="HDAdded"></span></p><span class="HDAdded">
</span><p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-@oriented">
<code>
@oriented
</code>
</dt>
<dd>
An attribute indicating whether an equation (<a href="#gloss-equal"><code>
&lt;Equal&gt;
</code>
</a>) is oriented (directed) or unoriented (symmetric). For example, the (oriented) defining equation 
<b>
<code>
home(father-of(John)) = Mexico City
</code>
</b>
appears as follows: 
<b>
<pre>
&lt;Equal oriented=<a name="diff" id="c35"><span class="HDDeleted">"yes"</span></a><span class="HDAdded">&quot;yes&quot;</span>&gt;
<span class="HDDeleted">  &lt;lhs&gt;
</span><span class="HDAdded">  &lt;left&gt;
</span>    &lt;Expr&gt;
      &lt;Fun in=<a name="diff" id="c36"><span class="HDDeleted">"yes"</span></a><span class="HDAdded">&quot;yes&quot;</span>&gt;home&lt;/Fun&gt;
      &lt;Expr&gt;
        &lt;Fun in=<a name="diff" id="c37"><span class="HDDeleted">"no"</span></a><span class="HDAdded">&quot;no&quot;</span>&gt;father-of&lt;/Fun&gt;
        &lt;Ind&gt;John&lt;/Ind&gt;
      &lt;/Expr&gt;
    &lt;/Expr&gt;
<a name="diff" id="c38"><span class="HDDeleted">  &lt;/lhs&gt;
</span></a><span class="HDDeleted">  &lt;rhs&gt;
</span><span class="HDAdded">  &lt;/left&gt;
</span><span class="HDAdded">  &lt;right&gt;
</span>    &lt;Ind&gt;Mexico City&lt;/Ind&gt;
<a name="diff" id="c39"><span class="HDDeleted">  &lt;/rhs&gt;
</span></a><span class="HDAdded">  &lt;/right&gt;
</span>&lt;/Equal&gt;
</pre>
</b>
<p>
(See: <a href="../xsd/modules/equality_module.xsd">equality module</a> and <a href="http://www.ruleml.org/fun">Functional RuleML</a>)
</p>
</dd>
<a name="diff" id="c40"><span class="HDAdded"></span><dt id="gloss-@per"><span class="HDAdded">
</span><code><span class="HDAdded">
@per
</span></code><span class="HDAdded">
</span></dt><span class="HDAdded">
</span><dd><span class="HDAdded">
An attribute used to indicate whether a function (</span><a href="#gloss-fun"><span class="HDAdded"></span><code><span class="HDAdded">
&lt;Fun&gt;
</span></code><span class="HDAdded">
</span></a><span class="HDAdded">) or an expr (</span><a href="#gloss-expr"><span class="HDAdded"></span><code><span class="HDAdded">
&lt;Expr&gt;
</span></code><span class="HDAdded">
</span></a><span class="HDAdded">) will be interpreted. In equality sublanguages, it has three values &quot;no&quot; (the default), &quot;yes&quot; and &quot;no&quot;, while in non-equality sublanguages it can only have the value &quot;no&quot;. 
</span><p><span class="HDAdded">
(See: </span><a href="../xsd/modules/expr_module.xsd"><span class="HDAdded">expr module</span></a><span class="HDAdded"> and </span><a href="http://www.ruleml.org/fun"><span class="HDAdded">Functional RuleML</span></a><span class="HDAdded">)
</span></p><span class="HDAdded">
</span></dd><span class="HDAdded">
</span></a><dt id="gloss-Plex">
<code>
&lt;Plex&gt;
</code>
</dt>
<dd>
A collection of (ordered) arguments (optionally enclosed by <a href="#gloss-arg"><code>
&lt;arg&gt;
</code>
</a>) and/or (unordered) user-defined slots (<a href="#gloss-slot"><code>
&lt;slot&gt;
</code>
</a>), identical to an uninterpreted expression (<a href="#gloss-expr"><code>
&lt;Expr in=<a name="diff" id="c41"><span class="HDDeleted">"no"</span></a><span class="HDAdded">&quot;no&quot;</span>&gt;
</code>
</a>) except not having a user-specified function name (equivalent to having a system-specified constructor 'Plex'). Rest variables (<a href="#gloss-repo"><code>
&lt;repo&gt;
</code>
</a> and <a href="#gloss-resl"><code>
&lt;resl&gt;
</code>
</a>) are also permitted. For example: 
<b>
<pre>
&lt;Plex&gt;
  &lt;Var&gt;title&lt;/Var&gt;
  &lt;Var&gt;author&lt;/Var&gt;
  &lt;Var&gt;table of contents&lt;/Var&gt;
  &lt;Var&gt;chapters&lt;/Var&gt;
&lt;/Plex&gt;

</pre>
</b>
<p>
(See: <a href="../xsd/modules/expr_module.xsd">expr module</a>)
</p>
</dd>
<dt id="gloss-Query">
<code>
&lt;Query&gt;
</code>
</dt>
<dd>
A 
<abbr title="Knowledge Query Manipulation Language">
KQML
</abbr>
-like performative acting as a wrapper specifying that its content (optionally surrounded by a <a href="#gloss-formula"><code>
&lt;formula&gt;
</code>
</a> role) is queried, making an 'implicit <a href="#gloss-rulebase"><code>
&lt;Rulebase&gt;
</code>
</a>' assumption. This allows the separation of declarative content from such procedural performatives. 
<p>
Attributes: <a href="#gloss-@closure"><code>
@closure
</code>
</a> 
</p>
<p>
(See: <a href="../xsd/modules/performative_module.xsd">performative module</a> and <a href="http://www.ruleml.org/fol">FOL RuleML</a>)
</p>
</dd>
<dt id="gloss-Reify">
<code>
&lt;Reify&gt;
</code>
</dt>
<dd>
Supports reification (a kind of instantiation or quasi-quotation) as needed by <a href="http://www.w3.org/submission/swsf-swsl"><acronym title="Semantic Web Services Language">
SWSL
</acronym>
</a>. It allows any RuleML tag available within the current sublanguage as content, treating it as a term for performing reasoning on, e.g. 
<b>
<pre>&lt;Reify&gt;&lt;Ind&gt;John Doe&lt;/Ind&gt;&lt;/Reify&gt;
</pre>
</b>
<p>
(See: <a href="../xsd/modules/term_module.xsd">term module</a>)
</p>
</dd>
<dt id="gloss-Rel">
<code>
&lt;Rel&gt;
</code>
</dt>
<dd>
A relation, i.e. a logical predicate, of an atom (<a href="#gloss-atom"><code>
&lt;Atom&gt;
</code>
</a>). It is optionally surrounded by an operator (<a href="#gloss-op"><code>
&lt;op&gt;
</code>
</a>). 
<p>
Attributes: <a href="#gloss-@iri"><code>
<span class="HDDeleted">@uri
</span><span class="HDAdded">@iri
</span></code>
<a name="diff" id="c42"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDAdded"></span></a><span class="HDAdded"> 
</span><span class="HDAdded"></span></p><span class="HDAdded">
</span><p>
(See: <a href="../xsd/modules/atom_module.xsd">atom module</a>)
</p>
</dd>
<dt id="gloss-repo">
<code>
&lt;repo&gt;
</code>
</dt>
<dd>
A positional rest variable used in <a href="#gloss-atom"><code>
&lt;Atom&gt;
</code>
</a>s, <a href="#gloss-expr"><code>
&lt;Expr&gt;
</code>
</a>s and <a href="#gloss-plex"><code>
&lt;Plex&gt;
</code>
</a>s. Note that <a href="#gloss-plex"><code>
&lt;Plex&gt;
</code>
</a>s are generated, so 
<code>
&lt;repo&gt;
</code>
s are only available above the Datalog sublanguage. 
<p>
(See: <a href="../xsd/modules/rest_module.xsd">rest module</a>)
</p>
</dd>
<dt id="gloss-resl">
<code>
&lt;resl&gt;
</code>
</dt>
<dd>
A slotted rest variable used in <a href="#gloss-atom"><code>
&lt;Atom&gt;
</code>
</a>s, <a href="#gloss-expr"><code>
&lt;Expr&gt;
</code>
</a>s and <a href="#gloss-plex"><code>
&lt;Plex&gt;
</code>
</a>s. Note that <a href="#gloss-plex"><code>
&lt;Plex&gt;
</code>
</a>s are generated, so 
<code>
&lt;resl&gt;
</code>
s are only available above the Datalog sublanguage. 
<p>
(See: <a href="../xsd/modules/rest_module.xsd">rest module</a>)
</p>
</dd>
<dt id="gloss-Retract">
<code>
&lt;Retract&gt;
</code>
</dt>
<dd>
A performative similar to 
<abbr title="Knowledge Query Manipulation Language">
KQML
</abbr>
's 'untell' that acts as a wrapper specifying that its	content (optionally surrounded by a <a href="#gloss-formula"><code>
&lt;formula&gt;
</code>
</a> role) is to be deleted, making an 'implicit <a href="#gloss-rulebase"><code>
&lt;Rulebase&gt;
</code>
</a>' assumption. This allows the separation of declarative content from such procedural performatives. For example, if John no longer likes Mary (after an argument, perhaps) then this fact could be retracted: 
<b>
<pre>
 &lt;Retract&gt;
   &lt;Atom&gt;
     &lt;Rel&gt;likes&lt;/Rel&gt;
     &lt;Ind&gt;John&lt;/Ind&gt;
     &lt;Ind&gt;Mary&lt;/Ind&gt;
   &lt;/Atom&gt;
 &lt;/Retract&gt;
</pre>
</b>
<p>
Attributes: <a href="#gloss-@mapdirection"><code>
@mapDirection
</code>
</a>, <a href="#gloss-@mapclosure"><code>
@mapClosure
</code>
</a>, <a href="#gloss-@mapmaterial"><code>
@mapMaterial
</code>
<a name="diff" id="c43"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDAdded"></span></a><span class="HDAdded"> 
</span><span class="HDAdded"></span></p><span class="HDAdded">
</span><p>
(See: <a href="../xsd/modules/performative_module.xsd">performative module</a> and <a href="http://www.ruleml.org/fol">FOL RuleML</a>)
</p>
</dd>
<span class="HDAdded"></span><dt id="gloss-right"><span class="HDAdded">
</span><code>
<a name="diff" id="c44"><span class="HDDeleted">&lt;rhs&gt;
</span></a><span class="HDAdded">&lt;right&gt;
</span></code>
</dt>
<dd>
The right-hand side of an equation (<a href="#gloss-equal"><code>
&lt;Equal&gt;
</code>
</a>). 
<p>
(See: <a href="../xsd/modules/equality_module.xsd">equality module</a>)
</p>
</dd>
<dt id="gloss-Rulebase">
<code>
&lt;Rulebase&gt;
</code>
</dt>
<dd>
A collection of rules that can be ordered or unordered, without or with duplicates. For example: <a href="http://www.ruleml.org/0.91/exa/fol+/naffolog/ssn.ruleml"><code>
ssn.ruleml
</code>
</a> 
<p>
Attributes: <a href="#gloss-@mapclosure"><code>
@mapClosure
</code>
</a>, <a href="#gloss-@mapdirection"><code>
@mapDirection
</code>
</a> and <a href="#gloss-@mapmaterial"><code>
@mapMaterial
</code>
<a name="diff" id="c45"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDAdded"></span></a><span class="HDAdded"> 
</span><span class="HDAdded"></span></p><span class="HDAdded">
</span><p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-RuleML">
<code>
&lt;RuleML&gt;
</code>
</dt>
<dd>
The n-ary top-level of a RuleML document. It permits (ordered) transactions of performatives (<a href="#gloss-assert"><code>
&lt;Assert&gt;
</code>
</a>, <a href="#gloss-query"><code>
&lt;Query&gt;
</code>
</a> or <a href="#gloss-retract"><code>
&lt;Retract&gt;
</code>
</a>), making an 'implicitly sequential' assumption. 
<p>
(See: <a href="../xsd/modules/performative_module.xsd">performative module</a>)
</p>
</dd>
<dt id="gloss-Set">
<code>
&lt;Set&gt;
</code>
</dt>
<dd>
A set-valued result as in 
<code>
t[m -&gt; {v1,...,vk}]
</code>
. 
<p>
(See: <a href="../xsd/modules/frame_module.xsd">frame module</a>, and the <a href="http://www.w3.org/submission/swsf-swsl/#ruleml-frames"><acronym title="Semantic Web Services Language">
SWSL
</acronym>
submission</a> to the 
<abbr title="World Wide Web Consortium">
W3C
</abbr>
)
</p>
</dd>
<dt id="gloss-Signature">
<code>
&lt;Signature&gt;
</code>
</dt>
<dd>
A signature molecule of the form 
<code>
t[m =&gt; v]
</code>
<p>
(See: <a href="../xsd/modules/frame_module.xsd">frame module</a>, and the <a href="http://www.w3.org/submission/swsf-swsl/#ruleml-frames"><acronym title="Semantic Web Services Language">
SWSL
</acronym>
submission</a> to the 
<abbr title="World Wide Web Consortium">
W3C
</abbr>
)
</p>
</dd>
<dt id="gloss-Skolem">
<code>
&lt;Skolem&gt;
</code>
</dt>
<dd>
A Skolem individual constant, like RDF's blank nodes. 
<p>
Attributes: <a href="#gloss-@type"><code>
@type
</code>
<a name="diff" id="c46"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDAdded"></span></a><span class="HDAdded"> 
</span><span class="HDAdded"></span></p><span class="HDAdded">
</span><p>
(See: <a href="../xsd/modules/term_module.xsd">term module</a>, and the <a href="http://www.ruleml.org/posl/poslintweb-talk.pdf">Integrating Positional and Slotted Knowledge on the Semantic Web</a> slides)
</p>
</dd>
<dt id="gloss-slot">
<code>
&lt;slot&gt;
</code>
</dt>
<dd>
A user-defined slot consisting of a name (first position) and a filler (second position). For example: 
<b>
<pre>
&lt;slot&gt;
  &lt;Ind&gt;color&lt;/Ind&gt;
  &lt;Ind&gt;blue&lt;/Ind&gt;
&lt;/slot&gt;

</pre>
</b>
<p>
Attributes: <a href="#gloss-@weight"><code>
@weight
</code>
</a>, <a href="#gloss-@card"><code>
@card
</code>
</a> (and <a href="#gloss-@mincard"><code>
@minCard
</code>
</a>/<a href="#gloss-@maxcard"><code>
@maxCard
</code>
</a> in SWSL sublanguages)
</p>
<p>
(See: <a href="../xsd/modules/slot_module.xsd">slot module</a>)
</p>
</dd>
<dt id="gloss-SlotProd">
<code>
&lt;SlotProd&gt;
</code>
</dt>
<dd>
A polyadic path expressions element. 
<p>
(See: <a href="../xsd/modules/frame_module.xsd">frame module</a>, and the <a href="http://www.w3.org/submission/swsf-swsl/#ruleml-frames"><acronym title="Semantic Web Services Language">
SWSL
</acronym>
submission</a> to the 
<abbr title="World Wide Web Consortium">
W3C
</abbr>
)
</p>
</dd>
<dt id="gloss-strong">
<code>
&lt;strong&gt;
</code>
</dt>
<dd>
A role used for classical negation (<a href="#gloss-neg"><code>
&lt;Neg&gt;
</code>
</a>). 
<p>
(See: <a href="../xsd/modules/neg_module.xsd">neg module</a>)
</p>
</dd>
<dt id="gloss-SubclassOf">
<code>
&lt;SubclassOf&gt;
</code>
</dt>
<dd>
A subclass molecule. 
<p>
(See: <a href="../xsd/modules/frame_module.xsd">frame module</a>, and the <a href="http://www.w3.org/submission/swsf-swsl/#ruleml-frames"><acronym title="Semantic Web Services Language">
SWSL
</acronym>
submission</a> to the 
<abbr title="World Wide Web Consortium">
W3C
</abbr>
)
</p>
</dd>
<dt id="gloss-then">
<code>
&lt;then&gt;
</code>
</dt>
<dd>
The <a name="diff" id="c47"><span class="HDDeleted">then</span></a><span class="HDAdded">'then'</span> of an implication rule (<a href="#gloss-implies"><code>
&lt;Implies&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">) containing the conclusion, also known as the &quot;consequent&quot; or &quot;then&quot; part of the rule. Also used as the &quot;consequent&quot; part of an entailment (</span><a href="#gloss-entails"><span class="HDAdded"></span><code><span class="HDAdded">
</span>&lt;Entails&gt;
</code>
</a>). 
<p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-torso">
<code>
&lt;torso&gt;
</code>
</dt>
<dd>
A symmetric role used in an equivalence expression (<a href="#gloss-equivalent"><code>
&lt;Equivalent&gt;
</code>
</a>) combining the asymmetric <a href="#gloss-then"><code>
&lt;then&gt;
</code>
</a> and <a href="#gloss-if"><code>
&lt;if&gt;
</code>
</a>. 
<p>
(See: <a href="../xsd/modules/connective_module.xsd">connective module</a>)
</p>
</dd>
<dt id="gloss-@type">
<code>
@type
</code>
</dt>
<dd>
A role for optionally specify a term<a name="diff" id="c48"><span class="HDDeleted">'s</span></a> (user-defined) type. 
<p>
(See: <a href="../xsd/modules/term_module.xsd">term module</a>)
</p>
</dd>
<span class="HDAdded"></span><dt id="gloss-Uniterm"><span class="HDAdded">
</span><code>
<a name="diff" id="c49"><span class="HDDeleted">@uri
</span></a><span class="HDAdded">&lt;Uniterm&gt;
</span></code>
</dt>
<dd>
<a name="diff" id="c50"><span class="HDDeleted">An optional attribute of </span></a><span class="HDAdded">A Hilog term, generalizing </span><a href="#gloss-atom"><code>
<span class="HDDeleted">&lt;Ind&gt;
</span><span class="HDDeleted"></span></code><span class="HDDeleted">
</span><span class="HDDeleted"></span></a><span class="HDDeleted">, </span><a href="#gloss-rel"><span class="HDDeleted"></span><code><span class="HDDeleted">
</span><span class="HDDeleted">&lt;Rel&gt;
</span><span class="HDDeleted"></span></code><span class="HDDeleted">
</span><span class="HDDeleted"></span></a><span class="HDDeleted">, and </span><a href="#gloss-fun"><span class="HDDeleted"></span><code><span class="HDDeleted">
</span><span class="HDDeleted">&lt;Fun&gt;
</span><span class="HDDeleted"></span></code><span class="HDDeleted">
</span><span class="HDDeleted"></span></a><span class="HDDeleted"> for referring to a URI like for XHTML anchors. On </span><a href="#gloss-ind"><span class="HDDeleted"></span><code><span class="HDDeleted">
</span><span class="HDDeleted">&lt;Ind&gt;
</span><span class="HDDeleted"></span></code><span class="HDDeleted">
</span><span class="HDDeleted"></span></a><span class="HDDeleted">s (or </span><a href="#gloss-con"><span class="HDDeleted"></span><code><span class="HDDeleted">
</span><span class="HDDeleted">&lt;Con&gt;
</span><span class="HDAdded">&lt;Atom&gt;
</span></code>
<a name="diff" id="c51"><span class="HDAdded"></span></a><span class="HDAdded"></span></a><span class="HDDeleted">s, in frame sublanguages) within an </span><span class="HDAdded"> and </span><a href="#gloss-expr"><code>
<span class="HDDeleted">&lt;oid&gt;
</span><span class="HDAdded">&lt;Expr&gt;
</span></code>
<span class="HDAdded"></span></a><span class="HDAdded">. 
</span><p>
<a name="diff" id="c52"><span class="HDDeleted">(See: </span><a href="../xsd/modules/uri_module.xsd"><span class="HDDeleted">uri module</span></a><span class="HDDeleted">)
</span></a><span class="HDAdded">(See: </span><a href="../xsd/modules/holog_module.xsd"><span class="HDAdded">holog module</span></a><span class="HDAdded">, and the </span><a href="http://www.w3.org/submission/swsf-swsl/#ruleml-hilog"><span class="HDAdded"></span><acronym title="Semantic Web Services Language"><span class="HDAdded">
</span><span class="HDAdded">SWSL
</span><span class="HDAdded"></span></acronym><span class="HDAdded">
</span><span class="HDAdded">submission</span></a><span class="HDAdded"> to the 
</span><span class="HDAdded"></span><abbr title="World Wide Web Consortium"><span class="HDAdded">
</span><span class="HDAdded">W3C
</span><span class="HDAdded"></span></abbr><span class="HDAdded">
</span><span class="HDAdded">)
</span></p>
</dd>
<dt id="gloss-@val">
<code>
@val
</code>
</dt>
<dd>
This attribute is used to indicate whether a function (<a href="#gloss-fun"><code>
&lt;Fun&gt;
</code>
<span class="HDAdded"></span></a><span class="HDAdded">) is deterministic or non-deterministic. It has two values: &quot;1&quot; (deterministic: exactly one) and &quot;0..&quot; (set-valued: zero or more). For example, the function 
</span><b>
<code>
children(John, Mary)
</code>
</b>
can be interpreted in a set-valued manner using a definition 
<b>
<code>
children(John, Mary) = {Jory, Mahn}
</code>
</b>
, so that the application 
<b>
<code>
children(John, Mary)
</code>
</b>
returns 
<b>
<code>
{Jory, Mahn}
</code>
</b>
: 
<b>
<pre>
&lt;Expr&gt;
<a name="diff" id="c53"><span class="HDDeleted">  &lt;Fun in="yes" val="0.."&gt;children&lt;/Fun&gt;
</span></a><span class="HDAdded">  &lt;Fun in=&quot;yes&quot; val=&quot;0..&quot;&gt;children&lt;/Fun&gt;
</span>  &lt;Ind&gt;John&lt;/Ind&gt;
  &lt;Ind&gt;Mary&lt;/Ind&gt;
&lt;/Expr&gt;

</pre>
</b>
<p>
(See: <a href="../xsd/modules/equality_module.xsd">equality module</a> and <a href="http://www.ruleml.org/fun">Functional RuleML</a>)
</p>
</dd>
<dt id="gloss-Var">
<code>
&lt;Var&gt;
</code>
</dt>
<dd>
A logical variable, as in logic programming. 
<p>
Attributes: <a href="#gloss-@type"><code>
@type
</code>
<a name="diff" id="c54"><span class="HDDeleted"></span></a><span class="HDDeleted"></span></p><span class="HDDeleted">
</span></a><span class="HDAdded"></span></a><span class="HDAdded"> 
</span><span class="HDAdded"></span></p><span class="HDAdded">
</span><p>
(See: <a href="../xsd/modules/term_module.xsd">term module</a>)
</p>
</dd>
<dt id="gloss-weak">
<code>
&lt;weak&gt;
</code>
</dt>
<dd>
A role used for negation as failure (<a href="#gloss-naf"><code>
&lt;Naf&gt;
</code>
</a>). 
<p>
(See: <a href="../xsd/modules/naf_module.xsd">naf module</a>)
</p>
</dd>
<dt id="gloss-@weight">
<code>
@weight
</code>
</dt>
<dd>
An attribute optionally specifying a <a href="#gloss-slot"><code>
&lt;slot&gt;
</code>
</a>'s relative weight. 
<p>
(See: <a href="../xsd/modules/slot_module.xsd">slot module</a>)
</p>
</dd>
</dl>
<br>
<p>
Site Contact: <a href="http://www.cs.unb.ca/~boley/">Harold Boley</a>. Page Version: <a name="diff" id="c55"><span class="HDDeleted">2006-08-24</span></a><span class="HDAdded">2010-07-18</span> 
<br>
<br>
<br>
<a name="practice-preach"></a> 
<small>
<a name="diff" id="c56"><span class="HDDeleted">"Practice </span></a><span class="HDAdded">&quot;Practice </span>what you preach<span class="HDDeleted">"</span><span class="HDAdded">&quot;</span>: XML source of this homepage at <a href="index.xml">index.xml</a> (<a href="index.xml.txt">index.xml.txt</a>); 
<br>
transformed to HTML via the adaptation of <a href="http://www.dfki.uni-kl.de/~sintek/">Michael Sintek</a>'s SliML <a href="http://www.w3.org/tr/xslt">XSLT</a> stylesheet at <a href="http://www.dfki.uni-kl.de/~boley/xslt/homepage.xsl">homepage.xsl</a> (View | Page Source) 
</small>
</p>
</body>
</html>
