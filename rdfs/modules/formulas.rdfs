<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE RDF [
 <!ENTITY owl "http://www.w3.org/2002/07/owl">    
 <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns">  
 <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema">  
 <!ENTITY rulemlmm "http://ruleml.org/1.0/metamodel">     
 <!ENTITY rulemlv "http://ruleml.org/1.0/vocab">  
 <!ENTITY xs "http://www.w3.org/2001/XMLSchema">    
]>

<?xml-model href="http://www.w3.org/TR/2003/WD-rdf-syntax-grammar-20030123/rdfxml.rng" 
  type="application/relax-ng-compact-syntax"?>
<rdf:RDF xmlns:owl="&owl;#" xmlns:rdf="&rdf;#" xmlns:rdfs="&rdfs;#"
  xmlns:rulemlmm="&rulemlmm;#" xmlns:rulemlv="&rulemlv;#" xmlns:xs="&xs;"
  xml:base="&rulemlmm;">
  <!-- In these comments I will use CURIE syntax -->
  <!-- This metamodel has been reverse-engineered from the
       RuleML Version 1.0 syntax. -->
  <!-- There is a subclass of rulemlmm:MetaformulaOrFormula called rulemlmm:Formula.
       It is intended to be a super-class for classes of base-level formulas, 
       such as rulemlmm:Rule and rulemlmm:AtomicFormula.       
       The union of rulemlmm:SimpleFormula and rulemlmm:CompoundFormula is rulemlmm:Formula .
   -->
  <rdfs:Class rdf:about="#Formula">
    <rdfs:subClassOf rdf:resource="#MetaformulaOrFormula"/>
  </rdfs:Class>
  <!-- There is a subclass of rulemlmm:Formula called rulemlmm:SimpleFormula.
       It is intended to be a super-class for classes of formulas that are simple,
       such as rulemlmm:AtomicFormula and rulemlmm:Equation .
       Simple means they do not contain other formulas.
       This class is disjoint with rulemlmm:CompoundFormula.
   -->
  <rdfs:Class rdf:about="#SimpleFormula">
    <rdfs:subClassOf rdf:resource="#Formula"/>
  </rdfs:Class>
  <!-- There is a subclass of rulemlmm:Formula called rulemlmm:CompoundFormula.
       It is intended to be a super-class for classes of formulas that are compound,
       such as rulemlmm:Conjunction and rulemlmm:Rule .
       Compound means they contain at least one formula.
   -->
  <rdfs:Class rdf:about="#CompoundFormula">
    <rdfs:subClassOf rdf:resource="#Formula"/>
  </rdfs:Class>
  <!-- There is a subclass of rulemlmm:CompoundFormula called rulemlmm:Operation.
       It is intended to be an abstract superclass for classes of operations, such as
       rulemlmm:LogicalOperation, rulemlmm:Negation, rulemlmm:ModalOperation.
       It is disjoint with rulemlmm:Quantification .
  -->
  <rdfs:Class rdf:about="#Operation">
    <rdfs:subClassOf rdf:resource="#CompoundFormula"/>
  </rdfs:Class>
  <!-- There is a subclass of rulemlmm:Formula called rulemlmm:LogicalFormula.
       It is the class containing all "rulemlmm:Formula"s that can be sub-formulas
       in some kind of rulemlmm:CompoundFormula.
       In RuleML Version 1.0, this includes all "rulemlmm:Formula"s except
       rulemlmm:Rule . 
  -->
  <rdfs:Class rdf:about="#LogicalFormula">
    <rdfs:subClassOf rdf:resource="#Formula"/>
  </rdfs:Class>

  <rdf:Property rdf:about="#hasFormula">
    <rdfs:subPropertyOf rdf:resource="#ruleMLEdge"/>
    <rdfs:domain rdf:resource="#CompoundFormula"/>
    <rdfs:range rdf:resource="#LogicalFormula"/>
  </rdf:Property>

</rdf:RDF>
