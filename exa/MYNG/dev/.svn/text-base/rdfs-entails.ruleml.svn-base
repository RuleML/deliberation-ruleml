<?xml-model href="http://ruleml.org/1.0/relaxng/schema_rnc.php?backbone=x3f&amp;default=x7&amp;termseq=x2&amp;lng=x1&amp;propo=x3f&amp;implies=x7&amp;terms=xf3f&amp;quant=x3&amp;expr=xf&amp;serial=xf" type="application/relax-ng-compact-syntax"?>

<!-- FIXME: Need to find out if Entails has an implicit closure assumption-->
<RuleML xmlns="http://ruleml.org/spec"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:ex="http://example.org#"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!-- This example shows how a sublanguage of arbitrary expressivity 
       (in this case naffologeq)
       can be restricted to binary (zero or two) positional arguments.
       
       We use this restricted language below to assert a statement equivalent
       to the following RDFS :
       
       <rdf:RDF
       xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
       xml:base="http://www.animals.fake/animals#">
       
       <rdf:Description rdf:ID="animal">
       <rdf:type rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
       </rdf:Description>
       
       <rdf:Description rdf:ID="horse">
       <rdf:type rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
       <rdfs:subClassOf rdf:resource="#animal"/>
       </rdf:Description>
       
       </rdf:RDF> 
  -->
  <Assert>
    <!--  xml:base="http://www.animals.fake/animals#" -->
    <Rulebase>
      <Atom>
        <Ind iri="#animal"/>
        <Rel iri="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
        <Ind iri="http://www.w3.org/2000/01/rdf-schema#Class"/>
      </Atom>
      <Atom>
        <Ind iri="#horse"/>
        <Rel iri="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
        <Ind iri="http://www.w3.org/2000/01/rdf-schema#Class"/>
      </Atom>
      <Atom>
        <Ind iri="#horse"/>
        <Rel iri="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
        <Ind iri="#animal"/>
      </Atom>
    </Rulebase>
    <Entails>
      <if>
        <Rulebase>
          <Atom>
            <Var>?CLASS1</Var>
            <Rel
              iri="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
            <Var>?CLASS2</Var>
          </Atom>
        </Rulebase>
      </if>
      <then>
        <Rulebase>
          <Implies>
            <if>
              <Atom>
                <Var>?IND</Var>
                <Rel
                  iri="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
                <Var>?CLASS1</Var>
              </Atom>
            </if>
            <then>
              <Atom>
                <Var>?IND</Var>
                <Rel
                  iri="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
                <Var>?CLASS2</Var>
              </Atom>
            </then>
          </Implies>
        </Rulebase>
      </then>
    </Entails>
  </Assert>
  <Query xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <Atom>
      <Rel iri="http://example.org#Predicate1"/>
      <Ind iri="http://example.org#subject1"/>
      <Var>?WHAT</Var>
    </Atom>
  </Query>
  <!-- Results
    Solution  Variable           Binding
    TRUE      <Var>?WHAT</Var>   <Data xsi:type="xs:string">object1</Data>
  -->
</RuleML>
