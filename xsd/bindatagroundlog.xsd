<?xml version="1.0" encoding="UTF-8"?>

<xs:schema targetNamespace="http://ruleml.org/spec" xmlns="http://ruleml.org/spec"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

	<!-- note that elementFormDefault is qualified because of local declarations -->

	<xs:annotation>
		<xs:documentation xml:lang="en"> XML Schema for a Binary Ground-Datalog RuleML sublanguage
			File: bindatagroundlog.xsd Version: 1.0 Last Modification: 2012-03-29
		</xs:documentation>
	</xs:annotation>

	<xs:redefine schemaLocation="bindatalog.xsd">
		<!--
			remove Var so that arg's content model is: (Ind | Data | Skolem | Reify)

			note that this automatically removes Var from Atom so that its content model is:
			(
				meta*, oid?, (op | Rel), slot*,
				( (arg|Ind|Data|Skolem|Reify), (arg|Ind|Data|Skolem|Reify), slot* )?
			)
		-->
		<xs:group name="arg.content">
			<xs:choice>
				<xs:element ref="Ind"/>
				<xs:element ref="Data"/>
				<xs:element ref="Skolem"/>
				<xs:element ref="Reify"/>
			</xs:choice>
		</xs:group>



		<!--
			remove Forall (since ground) so that Assert's content model is:
			( meta*, (formula | Rulebase | Atom | Implies | Equivalent | Entails)* )
		-->
		<xs:group name="formula-assert.content">
			<xs:choice>
				<xs:element ref="Rulebase"/>
				<xs:element name="Atom" type="Atom.type"/>
				<xs:element ref="Implies"/>
				<xs:element ref="Equivalent"/>
				<xs:element ref="Entails"/>
			</xs:choice>
		</xs:group>

		<!--
			remove Forall (since ground) so that Rulebase's content model is:
			( meta*, (formula | Atom | Implies | Equivalent)* )
		-->
		<xs:group name="formula-rulebase.content">
			<xs:choice>
				<xs:element name="Atom" type="Atom.type"/>
				<xs:element ref="Implies"/>
				<xs:element ref="Equivalent"/>
			</xs:choice>
		</xs:group>

		<!--
			similarly, remove Exists (since ground) so that Query's content model is:
			( meta*, (formula | Rulebase | And | Or | Atom | Entails)* )
		-->
		<xs:group name="formula-query.content">
			<xs:choice>
				<xs:element ref="Rulebase"/>
				<xs:element name="And" type="And-query.type"/>
				<xs:element name="Or" type="Or-query.type"/>
				<xs:element name="Atom" type="Atom.type"/>
				<xs:element ref="Entails"/>
			</xs:choice>
		</xs:group>

	</xs:redefine>

</xs:schema>
