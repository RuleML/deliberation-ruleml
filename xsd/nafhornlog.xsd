<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://ruleml.org/spec" xmlns="http://ruleml.org/spec"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<xs:annotation>
		<xs:documentation xml:lang="en"> XML Schema for a Hornlog RuleML sublanguage, including
			negation as failure (NAF) File: nafhornlog.xsd Version: 1.0 Last Modification:
			2010-08-19 </xs:documentation>
	</xs:annotation>

	<!-- nafhornlog includes the 'naf' module -->
	<xs:include schemaLocation="modules/naf_module.xsd"/>

	<!-- note the addition of Naf (negation as failure) from the negation module -->
	<xs:redefine schemaLocation="hornlog.xsd">

		<!--
			add Naf so that if's content model is:
			(Atom | And | Or | Naf)
		-->
		<xs:group name="if.content">
			<xs:choice>
				<xs:group ref="if.content"/>
				<xs:element ref="Naf"/>
			</xs:choice>
		</xs:group>
		<!--
			note that the above indirectly adds Naf to Implies so that its content model is:
			( oid?, (then, if) | (if, then) | ( (Atom | And | Or | Naf), Atom ) )
		-->

		<!--
			add Naf so that Query's content model is:
			( (formula | Atom | Rulebase | And | Or | Entails | Exists | Naf)* )
		-->
		<xs:group name="formula-query.content">
			<xs:choice>
				<xs:group ref="formula-query.content"/>
				<xs:element ref="Naf"/>
			</xs:choice>
		</xs:group>

		<!--
			add Naf so that formula's content model (when under And/Or) is:
			(Atom | And | Or | Naf)
		-->
		<xs:group name="formula-and-or.content">
			<xs:choice>
				<xs:group ref="formula-and-or.content"/>
				<xs:element ref="Naf"/>
			</xs:choice>
		</xs:group>
		<!--
			Note that the above indirectly adds Naf to And/Or so their content models are:
			( (formula | Atom | And | Or | Naf)* )
		-->

	</xs:redefine>

</xs:schema>
