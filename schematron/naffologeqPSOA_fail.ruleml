<RuleML xmlns="http://ruleml.org/spec" xmlns:this="http://example.org/naffologeqPSOA_relaxed.ruleml" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!-- note the addition of the XML Schema namespace because a built-in datatype is used -->
  <!-- a syntactic example rulebase for testing the Naffologeq PSOA RuleML sublanguage -->
  
  <Assert mapClosure="universal" mapDirection="bidirectional">
    
    <Subclass>
      <sub><Rel>TA</Rel></sub>
      <super><Rel>Student</Rel></super>
    </Subclass>
    
    <Subclass>
      <sub><Rel>TA</Rel></sub>
      <super><Rel>Teacher</Rel></super>
    </Subclass>
    
    <Subclass>
      <sub><Rel>Teacher</Rel></sub>
      <super><Rel>Scholar</Rel></super>
    </Subclass>
    
    <Subclass>
      <sub><Rel>Student</Rel></sub>
      <super><Rel>Scholar</Rel></super>
    </Subclass>
    
    <Subclass>
      <Rel>horse</Rel>
      <Rel>animal</Rel>
    </Subclass>
    
    <Subclass>
      <Rel>duck</Rel>
      <super><Rel>animal</Rel></super>
    </Subclass>
    
    <Forall>
      <Var>d</Var>
      <Equal>
        <Ind>some constant</Ind>
        <Var>d</Var>
      </Equal>
    </Forall>
    
    <Forall>
      <Var>d</Var>
      <Implies>
        <Naf>
          <Equal>
            <Ind>some constant</Ind>
            <Var>d</Var>
          </Equal>
        </Naf>
        <Atom>
          <Rel>own</Rel>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </Implies>
    </Forall>
    
    <Forall>
      <Var>person</Var>
      <Var>object</Var>
      <Implies>
        <if>
          <Naf mapDirection="bidirectional">
            <weak>
              <Implies node="this:#disclaiming-of-other-persons">
                <if>
                  <Equal>
                    <Expr>
                      <op>
                        <Fun>f</Fun>
                      </op>
                        <tupdep>
                          <Tuple>
                            <Ind>a</Ind>
                            <Ind>b</Ind>
                          </Tuple>
                        </tupdep>
                        <tupdep>
                          <Tuple>
                            <Ind>a2</Ind>
                            <Ind>b2</Ind>
                          </Tuple>
                        </tupdep>
                        <slotdep>
                          <Ind>a1</Ind>
                          <Ind>b1</Ind>
                        </slotdep>
                        <slotdep>
                          <Ind>a2</Ind>
                          <Ind>b2</Ind>
                        </slotdep>
                    </Expr>
                    <Var>d</Var>
                  </Equal>
                </if>
                <then>
                  <Equal>
                    <Ind>some constant</Ind>
                    <Var>d</Var>
                  </Equal>
                </then>
              </Implies>
            </weak>
          </Naf>
        </if>
        <then>
          <Atom>
            <Rel>own</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
        </then>
      </Implies>
    </Forall>

    <Equivalent>
      <torso>
        <Atom>
          <Rel>own</Rel>
          <Skolem>test</Skolem>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </torso>
      <torso>
        <Atom>
          <Rel>belongs</Rel>
          <Var>object</Var>
          <Var>person</Var>
        </Atom>
      </torso>
    </Equivalent>

    <Implies node="this:#claiming-through-disclaimers">
      <if>
        <And>
          <Equal>
            <Ind>some constant</Ind>
            <Var>d</Var>
          </Equal>
          <Naf mapClosure="existential">
            <Exists>
              <Var>merchant</Var>
              <And>
                <Atom>
                  <Rel>buy</Rel>
                  <Var>person</Var>
                  <Var>merchant</Var>
                  <Var>object</Var>
                </Atom>
                <Atom>
                  <Rel>keep</Rel>
                  <Var>person</Var>
                  <Var>object</Var>
                </Atom>
                <Atom>
                  <oid>
                    <Ind>j1</Ind>
                  </oid>
                  <Rel>g</Rel>
                  <slotdep>
                    <Ind>a3</Ind>
                    <Ind>b3</Ind>
                  </slotdep>
                  <slot>
                    <Ind>d3</Ind>
                    <Ind>e3</Ind>
                  </slot>
                  <Ind>u</Ind>
                  <Expr>
                    <oid>
                      <Ind>j1</Ind>
                    </oid>
                    <Fun>p</Fun>
                      <tup>
                        <Tuple>
                          <Ind>a</Ind>
                          <Ind>b</Ind>
                        </Tuple>
                      </tup>
                      <tup>
                        <Tuple>
                          <Ind>a2</Ind>
                          <Ind>b2</Ind>
                        </Tuple>
                      </tup>
                      <slotdep>
                        <Ind>a1</Ind>
                        <Ind>b1</Ind>
                      </slotdep>
                      <slot>
                        <Ind>d1</Ind>
                        <Ind>e1</Ind>
                      </slot>
                      <slot>
                        <Ind>a2</Ind>
                        <Ind>b2</Ind>
                      </slot>
                      <slot>
                        <Ind>d2</Ind>
                        <Ind>e2</Ind>
                      </slot>
                  </Expr>
                  <Ind>v</Ind>
                  <slotdep>
                    <Ind>a4</Ind>
                    <Ind>b4</Ind>
                  </slotdep>
                  <slot>
                    <Ind>d4</Ind>
                    <Ind>e4</Ind>
                  </slot>
                </Atom>
              </And>
            </Exists>
          </Naf>
          <Forall>
            <Var>x</Var>
            <Implies node="this:#disclaiming-of-other-persons">
              <if>
                <Atom>
                  <Rel>unequal</Rel>
                  <Var>x</Var>
                  <Var>person</Var>
                </Atom>
              </if>
              <then>
                <Atom>
                  <Rel>disclaim</Rel>
                  <Var>x</Var>
                  <Skolem>test</Skolem>
                  <Var>object</Var>
                </Atom>
              </then>
            </Implies>
          </Forall>
          <Atom>
            <Rel>keep</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
        </And>
      </if>
      <then>
        <Atom>
          <Rel>claim</Rel>
          <Var>person</Var>
          <Var>object</Var>
        </Atom>
      </then>
    </Implies>

    <Implies node="this:#claiming-or-relinquishing-through-disclaimers">
      <if>
        <Forall>
          <Var>x</Var>
          <Implies node="this:#disclaiming-of-other-persons">
            <if>
              <Atom>
                <Rel>unequal</Rel>
                <Var>x</Var>
                <Var>person</Var>
              </Atom>
            </if>
            <then>
              <Atom>
                <Rel>disclaim</Rel>
                <Var>x</Var>
                <Var>object</Var>
              </Atom>
            </then>
          </Implies>
        </Forall>
      </if>
      <then>
        <Or>
          <Atom>
            <Rel>claim</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
          <Atom>
            <Rel>relinquish</Rel>
            <Var>person</Var>
            <Var>object</Var>
          </Atom>
        </Or>
      </then>
    </Implies>
    <Implies>
      <if>
        <And>
          <Atom>
            <op>
              <Rel>friend</Rel>
            </op>
            <Ind>Jane</Ind>
            <Ind>Joan</Ind>
            <Skolem/>
            <Ind>Jack</Ind>
            <Var>y</Var>
            <Ind>Frank</Ind>
            <Plex>
              <Ind/>
            </Plex>
            <slot>
              <Ind>yar</Ind>
              <Expr>
                <op>
                  <oid>
                    <Ind>j1</Ind>
                  </oid>
                  <Fun>constructor</Fun>
                </op>
                <!-- <Plex>
                  <Var>z</Var>
                  <slot>
                    <Ind>yar2</Ind>
                    <Var>c</Var>
                  </slot>
                </Plex>-->
              </Expr>
            </slot>
          </Atom>
        </And>
      </if>
      <then>
        <Or>
          <Atom>
            <op>
              <Rel>friend</Rel>
            </op>
            <slot>
              <Ind>t</Ind>
              <Var>b</Var>
            </slot>
            <Var>x</Var>
            <Var>y</Var>
            <Ind>Steph</Ind>
          </Atom>
          <Atom>
            <op>
              <Rel>friend</Rel>
            </op>
            <slot>
              <Ind>t</Ind>
              <Var>b</Var>
            </slot>
            <Var>x</Var>
            <Var>y</Var>
            <Ind>Jill</Ind>
          </Atom>
        </Or>
      </then>
    </Implies>

    <Atom>
      <op>
        <Rel>some relation</Rel>
      </op>
      <slot>
        <Ind>role_name1</Ind>
        <Ind>role 1</Ind>
      </slot>
      <Ind>constant a</Ind>
      <Ind>constant b</Ind>
      <slot>
        <Ind>role_name2</Ind>
        <Ind>role 2</Ind>
      </slot>
    </Atom>

    <Equal>
      <Expr>
        <oid>
          <Ind>j1</Ind>
        </oid>
        <op>
          <Fun per="value">some function</Fun>
        </op>
        <Ind>arg1</Ind>
        <Ind>arg2</Ind>
        <Ind>arg3</Ind>
      </Expr>
      <Expr>
        <op>
          <Fun per="value">some other function</Fun>
        </op>
        <Ind>arg4</Ind>
        <Ind>arg5</Ind>
        <Ind>arg6</Ind>
      </Expr>
    </Equal>


  </Assert>

</RuleML>
