<?xml version="1.0" encoding="UTF-8"?>

<RuleML
xmlns="http://www.ruleml.org/1.0/xsd"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.ruleml.org/1.0/xsd http://www.ruleml.org/1.0/xsd/naffolog.xsd">

	<!-- a trivial example rulebase for testing the Hornlog RuleML sublanguage -->

	<Assert mapClosure="universal" mapDirection="bidirectional">


		<Forall>
			<Var>person</Var>
			<Var>object</Var>
			<Implies>
				<then>
					<Atom>
						<Rel>own</Rel>
						<Var>person</Var>
						<Var>object</Var>
					</Atom>
				</then>
				<if>
					<Naf mapDirection="bidirectional">
						<weak>
						<Implies>
							<oid>
								<Ind>disclaiming-of-other-persons</Ind>
							</oid>
							<if>
								<Atom>
									<Rel>unequal</Rel>
									<Var>x</Var>
									<Var>person</Var>
								</Atom>
							</if>
							<then>
								<Atom>
									<Rel>disclaim</Rel>
									<Var>x</Var>
									<Skolem>test</Skolem>
									<Var>object</Var>
								</Atom>
							</then>
						</Implies>
						</weak>
					</Naf>
				</if>
			</Implies>
		</Forall>

		<Equivalent>
			<torso>
				<Atom>
					<Rel>own</Rel>
					<Skolem>test</Skolem>
					<Var>person</Var>
					<Var>object</Var>
				</Atom>
			</torso>
			<torso>
				<Atom>
					<Rel>belongs</Rel>
					<Var>object</Var>
					<Var>person</Var>
					<repo>
						<Var>x</Var>
					</repo>
					<resl>
						<Var>y</Var>
					</resl>
				</Atom>
			</torso>
		</Equivalent>

		<Implies>
			<oid>
				<Ind>claiming-through-disclaimers</Ind>
			</oid>
			<then>
				<Atom>
					<Rel>claim</Rel>
					<Var>person</Var>
					<Var>object</Var>
				</Atom>
			</then>
			<if>
				<And>
					<Naf mapClosure="existential">
						<Exists>
							<Var>merchant</Var>
							<And>
								<Atom>
									<Rel>buy</Rel>
									<Var>person</Var>
									<Var>merchant</Var>
									<Var>object</Var>
								</Atom>
								<Atom>
									<Rel>keep</Rel>
									<Var>person</Var>
									<Var>object</Var>
								</Atom>
							</And>
						</Exists>					
					</Naf>
					<Forall>
						<Var>x</Var>
						<Implies>
							<oid>
								<Ind>disclaiming-of-other-persons</Ind>
							</oid>
							<if>
								<Atom>
									<Rel>unequal</Rel>
									<Var>x</Var>
									<Var>person</Var>
								</Atom>
							</if>
							<then>
								<Atom>
									<Rel>disclaim</Rel>
									<Var>x</Var>
									<Skolem>test</Skolem>
									<Var>object</Var>
								</Atom>
							</then>
						</Implies>
					</Forall>
					<Atom>
						<Rel>keep</Rel>
						<Var>person</Var>
						<Var>object</Var>
					</Atom>
				</And>
			</if>
		</Implies>

		<Implies>
			<oid>
				<Ind>claiming-or-relinquishing-through-disclaimers</Ind>
			</oid>
			<then>
				<Or>	<Naf>
					<Atom>
						<Rel>claim</Rel>
						<Var>person</Var>
						<Var>object</Var>
					</Atom></Naf>
					<Atom>
						<Rel>relinquish</Rel>
						<Var>person</Var>
						<Var>object</Var>
					</Atom>
				</Or>
			</then>
			<if>
				<Forall>
					<Var>x</Var>
					<Implies>
						<oid>
							<Ind>disclaiming-of-other-persons</Ind>
						</oid>
						<if>
							<Atom>
								<Rel>unequal</Rel>
								<Var>x</Var>
								<Var>person</Var>
							</Atom>
						</if>
						<then>
							<Atom>
								<Rel>disclaim</Rel>
								<Var>x</Var>
								<Var>object</Var>
								<repo>
									<Var>x</Var>
								</repo>
							</Atom>
						</then>
					</Implies>
				</Forall>
			</if>
		</Implies>
		<Implies>
			<then>
				<And> 
					<Naf>
					<Atom>
						<op>
							<Rel>friend</Rel>
						</op>
						<slot>
							<Ind>t</Ind>
							<Ind>b</Ind>
						</slot>
						<Var>x</Var>
						<Var>y</Var>
						<Ind>Steph</Ind>
					</Atom>
					</Naf>
				</And>
			</then>
			<if>
				<And>
					<Atom>
						<op>
							<Rel>friend</Rel>
						</op>
						<Ind>Jane</Ind>
						<Ind>Joan</Ind>
						<Skolem/>
						<Ind>Jack</Ind>
						<Var>y</Var>
						<Ind>Frank</Ind>
						<Plex>
							<Ind/>
						</Plex>
						<repo>
							<Plex>
								<Ind/>
								<Var/>
							</Plex>
						</repo>
						<slot>
							<Ind>yar</Ind>
							<Expr>
								<op>
									<Fun>constructor</Fun>
								</op>
								<Plex>
									<Var>z</Var>
									<slot>
										<Ind>yar2</Ind>
										<Ind>c</Ind>
									</slot>
								</Plex>
							</Expr>
						</slot>
						<resl>
							<Plex>
								<slot>
									<Ind/>
									<Ind/>
								</slot>
							</Plex>
						</resl>
					</Atom>
				</And>
			</if>
		</Implies>

		<Atom>
			<op>
				<Rel>some relation</Rel>
			</op>
			<slot>
				<Ind>role_name1</Ind>
				<Ind>role 1</Ind>
			</slot>
			<Ind>constant a</Ind>
			<Ind>constant b</Ind>
			<slot>
				<Ind>role_name2</Ind>
				<Ind>role 2</Ind>
			</slot>
		</Atom>
		

</Assert>

</RuleML>